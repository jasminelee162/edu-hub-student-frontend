{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getApeTestItemByTestId, saveApeTestStudent, getTestUserState } from '../../api/api';\nimport headerPage from \"../../components/header/header\";\nimport bottomPage from \"../../components/bottom/bottom\";\nexport default {\n  data() {\n    return {\n      id: \"\",\n      assign: [],\n      test: {},\n      total: 0,\n      hr: \"\",\n      min: \"\",\n      sec: \"\",\n      end: \"\",\n      timeOut: null,\n      five: false,\n      ten: false,\n      flag: false,\n      defen: 0\n    };\n  },\n  components: {\n    headerPage,\n    bottomPage\n  },\n  methods: {\n    submit() {\n      this.$confirm('确定要提交考试内容吗？', '交卷提醒', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.saveApeTestStudent();\n      }).catch(() => {});\n    },\n    submitEnd() {\n      this.$message({\n        message: '考试已结束，系统自动提交...',\n        type: 'success'\n      });\n      this.saveApeTestStudent();\n    },\n    saveApeTestStudent() {\n      for (let i = 0; i < this.assign.length; i++) {\n        var item = this.assign[i];\n        if (item.type == 1) {\n          item.solution = item.solution.join(\",\");\n        }\n      }\n      var param = {\n        list: this.assign\n      };\n      saveApeTestStudent(param).then(res => {\n        if (res.code == 1000) {\n          this.$message({\n            type: 'success',\n            message: '交卷成功!'\n          });\n          this.$router.push(\"/test\");\n        } else {\n          this.$message({\n            type: 'warning',\n            message: res.message\n          });\n        }\n      });\n    },\n    countdown() {\n      const now = Date.parse(new Date());\n      const msec = this.end - now;\n      if (msec <= 10 * 60 * 1000) {\n        if (!this.ten) {\n          this.$message('考试时间还剩十分钟');\n          this.ten = true;\n        }\n      }\n      if (msec <= 5 * 60 * 1000) {\n        if (!this.five) {\n          this.$message('考试时间还剩五分钟');\n          this.five = true;\n        }\n      }\n      if (msec <= 0) {\n        //考试结束\n        this.submitEnd();\n      }\n      ;\n      let day = parseInt(msec / 1000 / 60 / 60 / 24);\n      let hr = parseInt(msec / 1000 / 60 / 60 % 24);\n      let min = parseInt(msec / 1000 / 60 % 60);\n      let sec = parseInt(msec / 1000 % 60);\n      this.hr = hr > 9 ? hr : '0' + hr;\n      this.min = min > 9 ? min : '0' + min;\n      this.sec = sec > 9 ? sec : '0' + sec;\n      const that = this;\n      if (min >= 0 && sec >= 0) {\n        this.timeOut = setTimeout(function () {\n          that.countdown();\n        }, 1000);\n      }\n    },\n    getApeTestItemByTestId() {\n      getApeTestItemByTestId({\n        id: this.id\n      }).then(res => {\n        if (res.code == 1000) {\n          this.assign = res.data.testItem;\n          this.test = res.data.test;\n          for (let i = 0; i < this.assign.length; i++) {\n            var item = this.assign[i];\n            this.total = this.total + item.score;\n            this.defen = this.defen + item.point;\n            if (item.type == \"0\" || item.type == \"1\") {\n              if (item.content) {\n                item.content = JSON.parse(item.content);\n              }\n              if (item.type == 1) {\n                if (item.solution) {\n                  item.solution = item.solution.split(\",\");\n                } else {\n                  item.solution = [];\n                }\n              }\n            }\n          }\n        }\n      });\n    },\n    getTestUserState() {\n      getTestUserState({\n        id: this.id\n      }).then(res => {\n        if (res.code == 1000) {\n          this.flag = true;\n        } else {\n          this.countdown();\n          this.flag = false;\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    this.end = Date.parse(new Date()) + this.test.totalTime * 60 * 1000;\n    var id = this.$route.query.id;\n    if (id) {\n      this.id = id;\n    }\n    this.getTestUserState();\n    this.getApeTestItemByTestId();\n  },\n  destroyed() {\n    clearTimeout(this.timeOut);\n  }\n};","map":{"version":3,"names":["getApeTestItemByTestId","saveApeTestStudent","getTestUserState","headerPage","bottomPage","data","id","assign","test","total","hr","min","sec","end","timeOut","five","ten","flag","defen","components","methods","submit","$confirm","confirmButtonText","cancelButtonText","type","then","catch","submitEnd","$message","message","i","length","item","solution","join","param","list","res","code","$router","push","countdown","now","Date","parse","msec","day","parseInt","that","setTimeout","testItem","score","point","content","JSON","split","created","mounted","window","scrollTo","top","behavior","totalTime","$route","query","destroyed","clearTimeout"],"sources":["src/views/testP/testInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"testInfo\">\r\n    <headerPage></headerPage>\r\n    <div class=\"testInfo-content\">\r\n        <div class=\"test-page-desc\">\r\n            <div class=\"test-page-image\">\r\n                <img style=\"widthL:100%\" src=\"../../assets/image/testP/Accent.png\">\r\n            </div>\r\n            <div class=\"test-page-num\" v-if=\"!flag\">\r\n                 <div class=\"test-page-num1\">剩余时间</div>\r\n                 <div class=\"test-page-num2\">{{hr+'小时'+min+'分'+sec+'秒'}}</div>\r\n            </div>\r\n            <div class=\"test-page-font\">\r\n                <div class=\"test-page-font1\">\r\n                    <div style=\"font-weight:bold;margin-bottom:5px\">考前须知：</div>\r\n                    <div>1、请提前进行基础设备检测，包括鼠标、键盘、显示器或其他硬件设备；</div>\r\n                    <div>2、请拔掉U盘、移动硬盘或其他与考试无关的外接设备。</div>\r\n                    <div>3、如果您使用的是移动电脑，请确保电源连接正常。</div>\r\n                    <div>4、请确保系统内未开启与考试无关的非必要软件；</div>\r\n                    <div>5、请确保当前使用的是谷歌浏览器，且页面（浏览器）是最大化状态；</div>\r\n                    <div>6、考试过程中，如非特殊要求，请勿执行任何会导致考试页面失焦的操作，包括关闭、切换或移动标签页、关闭或最小化浏览器；</div>\r\n                </div>\r\n                <div class=\"test-page-font2\">\r\n                    <div>7、考试过程中，如非特殊要求，请勿修改浏览器和页面的大小，包括还原（非最大化）浏览器，手动拖拽浏览器尺寸等；</div>\r\n                    <div>8、有些考试可能会禁用复制粘贴功能。</div>\r\n                    <div>9、如果有考试开启了防作弊视频监控，请提前完成摄像头检测工作，且考试过程中一直保持面部处于监控画面中心位置，如果存在面部偏离、转头，面部消失或出现非考生面部信息等异常情况，系统会自动记录这些信息，并通知给监考教师。</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"testInfo-top\">\r\n            <div class=\"testInfo-title\">\r\n                 {{test.taskName}} - {{test.name}}\r\n            </div>\r\n            <div class=\"testInfo-state\">\r\n                 总分：{{total}}分  得分：{{defen}}分\r\n            </div>\r\n            <div class=\"testInfo-list\">\r\n                <div class=\"testInfo-item\" v-for=\"(item,index) in assign\" :key=\"index\">\r\n                    <div style=\"margin-top:10px;margin-left:10px\">{{index + 1}}.{{item.title}}\r\n                        <span style=\"color:red\" v-if=\"flag && item.score != item.point\">正确答案：{{item.answer}}</span>\r\n                        <span style=\"color:green\" v-if=\"flag && item.score == item.point\">正确答案：{{item.answer}}</span>\r\n                        <span style=\"color:green;margin-left:10px\" v-if=\"flag\">得分：{{item.point}}</span>\r\n                    </div>\r\n                    <div style=\"margin-top:10px;margin-left:10px;margin-bottom:10px\">\r\n                        <el-radio-group v-model=\"item.solution\" v-if=\"item.type == 0\">\r\n                            <el-radio v-for=\"(e,s) in item.content\" :key=\"s\" :label=\"e.value\">{{e.value}}.{{e.option}}</el-radio>\r\n                        </el-radio-group>\r\n                        <el-checkbox-group v-model=\"item.solution\" v-if=\"item.type == 1\">\r\n                            <el-checkbox v-for=\"(e,s) in item.content\" :key=\"s\" :label=\"e.value\">{{e.value}}.{{e.option}}</el-checkbox>\r\n                        </el-checkbox-group>\r\n                        <el-input v-model=\"item.solution\" v-if=\"item.type == 2\" size=\"mini\" placeholder=\"请输入答案\"></el-input>\r\n                        <el-radio-group v-model=\"item.solution\" v-if=\"item.type == 3\">\r\n                            <el-radio label=\"正确\">正确</el-radio>\r\n                            <el-radio label=\"错误\">错误</el-radio>\r\n                        </el-radio-group>\r\n                        <el-input type=\"textarea\" v-model=\"item.solution\" v-if=\"item.type == 4\" size=\"mini\" placeholder=\"请输入答案\"></el-input>\r\n                        <el-input type=\"textarea\" v-model=\"item.solution\" v-if=\"item.type == 5\" size=\"mini\" placeholder=\"请输入答案\"></el-input>\r\n                    </div>\r\n                </div>\r\n                <div style=\"margin-bottom:20px\">\r\n                    <el-button v-if=\"!flag\" @click=\"submit\" size=\"mini\" type=\"primary\">提交</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <bottomPage></bottomPage>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {getApeTestItemByTestId,saveApeTestStudent,getTestUserState} from '../../api/api'\r\n  import headerPage from \"../../components/header/header\"\r\n  import bottomPage from \"../../components/bottom/bottom\"\r\n  export default {\r\n    data() {\r\n      return{\r\n        id: \"\",\r\n        assign: [],\r\n        test: {},\r\n        total: 0,\r\n        hr: \"\",\r\n        min: \"\",\r\n        sec: \"\",\r\n        end: \"\",\r\n        timeOut: null,\r\n        five: false,\r\n        ten: false,\r\n        flag: false,\r\n        defen: 0\r\n      }\r\n    },\r\n    components: {\r\n      headerPage,\r\n      bottomPage\r\n    },\r\n    methods: {\r\n        submit() {\r\n            this.$confirm('确定要提交考试内容吗？','交卷提醒', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n                }).then(() => {\r\n                    this.saveApeTestStudent()\r\n                }).catch(() => {\r\n\r\n            });\r\n\r\n        },\r\n        submitEnd() {\r\n            this.$message({\r\n                message: '考试已结束，系统自动提交...',\r\n                type: 'success'\r\n            });\r\n            this.saveApeTestStudent()\r\n        },\r\n        saveApeTestStudent() {\r\n            for(let i = 0;i<this.assign.length;i++) {\r\n                var item = this.assign[i]\r\n                if(item.type == 1) {\r\n                    item.solution = item.solution.join(\",\")\r\n                }\r\n            }\r\n            var param = {\r\n                list: this.assign\r\n            }\r\n            saveApeTestStudent(param).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.$message({\r\n                        type: 'success',\r\n                        message: '交卷成功!'\r\n                    });\r\n                    this.$router.push(\"/test\")\r\n                } else {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: res.message\r\n                    });\r\n                }\r\n            })\r\n        },\r\n        countdown () {\r\n            const now = Date.parse(new Date())\r\n            const msec = this.end - now\r\n\r\n            if(msec <= (10 * 60 * 1000)) {\r\n                if(!this.ten) {\r\n                    this.$message('考试时间还剩十分钟');\r\n                    this.ten = true\r\n                }\r\n            }\r\n\r\n            if(msec <= (5 * 60 * 1000)) {\r\n                if(!this.five) {\r\n                    this.$message('考试时间还剩五分钟');\r\n                    this.five = true\r\n                }\r\n            }\r\n\r\n            if(msec<=0) {\r\n                //考试结束\r\n                this.submitEnd()\r\n            };\r\n\r\n            let day = parseInt(msec / 1000 / 60 / 60 / 24)\r\n            let hr = parseInt(msec / 1000 / 60 / 60 % 24)\r\n            let min = parseInt(msec / 1000 / 60 % 60)\r\n            let sec = parseInt(msec / 1000 % 60)\r\n            this.hr = hr > 9 ? hr : '0' + hr\r\n            this.min = min > 9 ? min : '0' + min\r\n            this.sec = sec > 9 ? sec : '0' + sec\r\n            const that = this\r\n            if(min>=0 && sec>=0){\r\n                this.timeOut = setTimeout(function () {\r\n                    that.countdown()\r\n                }, 1000)\r\n            }\r\n        },\r\n        getApeTestItemByTestId(){\r\n            getApeTestItemByTestId({id:this.id}).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.assign = res.data.testItem\r\n                    this.test = res.data.test\r\n                    for(let i = 0;i<this.assign.length;i++) {\r\n                        var item = this.assign[i]\r\n                        this.total = this.total + item.score\r\n                        this.defen = this.defen + item.point\r\n                        if (item.type == \"0\" || item.type == \"1\") {\r\n                          if (item.content) {\r\n                              item.content = JSON.parse(item.content)\r\n                          }\r\n                          if(item.type == 1) {\r\n                              if(item.solution) {\r\n                                item.solution = item.solution.split(\",\")\r\n                              } else {\r\n                                item.solution = []\r\n                              }\r\n                          }\r\n                      }\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        getTestUserState() {\r\n            getTestUserState({id:this.id}).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.flag = true\r\n                } else {\r\n                    this.countdown()\r\n                    this.flag = false\r\n                }\r\n            })\r\n        }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        });\r\n        this.end = Date.parse(new Date()) + this.test.totalTime * 60 * 1000\r\n        var id = this.$route.query.id\r\n        if (id) {\r\n            this.id = id\r\n        }\r\n        this.getTestUserState()\r\n        this.getApeTestItemByTestId()\r\n    },\r\n    destroyed() {\r\n        clearTimeout(this.timeOut)\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n  @import url(\"../../assets/css/testP/testInfo.css\");\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}