{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getApeChapterById, getApeHomeworkStudentList, saveApeHomeworkStudent, getApeHomeworkStudentFlag } from \"../../api/api\";\nimport headerPage from \"../../components/header/header\";\nimport bottomPage from \"../../components/bottom/bottom\";\nexport default {\n  data() {\n    return {\n      chapterId: \"\",\n      chapter: {},\n      homework: [],\n      total: 0,\n      defen: 0,\n      flag: false\n    };\n  },\n  components: {\n    headerPage,\n    bottomPage\n  },\n  methods: {\n    getApeChapterById() {\n      getApeChapterById({\n        id: this.chapterId\n      }).then(res => {\n        if (res.code == 1000) {\n          this.chapter = res.data;\n        }\n      });\n    },\n    getApeHomeworkStudentList() {\n      var param = {\n        chapterId: this.chapterId\n      };\n      getApeHomeworkStudentList(param).then(res => {\n        if (res.code == 1000) {\n          this.homework = res.data;\n          for (let i = 0; i < this.homework.length; i++) {\n            var item = this.homework[i];\n            this.total = this.total + item.score;\n            this.defen = this.defen + item.point;\n            if (item.type == \"0\" || item.type == \"1\") {\n              if (item.content) {\n                item.content = JSON.parse(item.content);\n              }\n              if (item.type == 1) {\n                if (item.solution) {\n                  item.solution = item.solution.split(\",\");\n                } else {\n                  item.solution = [];\n                }\n              }\n            }\n          }\n        }\n      });\n    },\n    submit() {\n      this.$confirm('确定要提交作业内容吗？', '提醒', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        for (let i = 0; i < this.homework.length; i++) {\n          var item = this.homework[i];\n          if (item.type == 1) {\n            item.solution = item.solution.join(\",\");\n          }\n        }\n        var param = {\n          homework: this.homework\n        };\n        saveApeHomeworkStudent(param).then(res => {\n          if (res.code == 1000) {\n            this.$message({\n              type: 'success',\n              message: '提交成功!'\n            });\n            this.$router.push(\"/taskInfo?id=\" + this.chapter.taskId);\n          }\n        });\n      }).catch(() => {});\n    },\n    getApeHomeworkStudentFlag() {\n      getApeHomeworkStudentFlag({\n        id: this.chapterId\n      }).then(res => {\n        if (res.code == 1000) {\n          this.flag = true;\n        } else {\n          this.flag = false;\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    var chapterId = this.$route.query.id;\n    if (chapterId) {\n      this.chapterId = chapterId;\n    }\n    this.getApeChapterById();\n    this.getApeHomeworkStudentList();\n    this.getApeHomeworkStudentFlag();\n  }\n};","map":{"version":3,"names":["getApeChapterById","getApeHomeworkStudentList","saveApeHomeworkStudent","getApeHomeworkStudentFlag","headerPage","bottomPage","data","chapterId","chapter","homework","total","defen","flag","components","methods","id","then","res","code","param","i","length","item","score","point","type","content","JSON","parse","solution","split","submit","$confirm","confirmButtonText","cancelButtonText","join","$message","message","$router","push","taskId","catch","created","mounted","window","scrollTo","top","behavior","$route","query"],"sources":["src/views/assign/assignInfo.vue"],"sourcesContent":["<template>\r\n  <div class=\"assignInfo\">\r\n    <headerPage></headerPage>\r\n    <div class=\"assignInfo-content\">\r\n        <div class=\"assignInfo-top\">\r\n            <div class=\"assignInfo-title\">\r\n                 {{chapter.taskName}} - {{chapter.name}} - 章节作业\r\n            </div>\r\n            <div class=\"assignInfo-state\">\r\n               {{flag?'已提交':'未提交'}} 总分：{{total}}分  得分：{{defen}}分\r\n            </div>\r\n            <div class=\"assignInfo-list\">\r\n                <div class=\"assignInfo-item\" v-for=\"(item,index) in homework\" :key=\"index\">\r\n                    <div style=\"margin-top:10px;margin-left:10px\">{{index + 1}}.{{item.title}} \r\n                        <span style=\"color:red\" v-if=\"flag && item.score != item.point\">正确答案：{{item.answer}}</span>\r\n                        <span style=\"color:green\" v-if=\"flag && item.score == item.point\">正确答案：{{item.answer}}</span>\r\n                    </div>\r\n                    <div style=\"margin-top:10px;margin-left:10px;margin-bottom:10px\">\r\n                        <el-radio-group v-model=\"item.solution\" v-if=\"item.type == 0\">\r\n                            <el-radio v-for=\"(e,s) in item.content\" :key=\"s\" :label=\"e.value\">{{e.value}}.{{e.option}}</el-radio>\r\n                        </el-radio-group>\r\n                        <el-checkbox-group v-model=\"item.solution\" v-if=\"item.type == 1\">\r\n                            <el-checkbox v-for=\"(e,s) in item.content\" :key=\"s\" :label=\"e.value\">{{e.value}}.{{e.option}}</el-checkbox>\r\n                        </el-checkbox-group>\r\n                        <el-input v-model=\"item.solution\" v-if=\"item.type == 2\" size=\"mini\" placeholder=\"请输入答案\"></el-input>\r\n                        <el-radio-group v-model=\"item.solution\" v-if=\"item.type == 3\">\r\n                            <el-radio label=\"正确\">正确</el-radio>\r\n                            <el-radio label=\"错误\">错误</el-radio>\r\n                        </el-radio-group>\r\n                    </div>\r\n                </div>\r\n                <div style=\"margin-bottom:20px\">\r\n                    <el-button v-if=\"!flag\" @click=\"submit\" size=\"mini\" type=\"primary\">提交</el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <bottomPage></bottomPage>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {getApeChapterById,getApeHomeworkStudentList,saveApeHomeworkStudent,getApeHomeworkStudentFlag} from \"../../api/api\"\r\n  import headerPage from \"../../components/header/header\"\r\n  import bottomPage from \"../../components/bottom/bottom\"\r\n  export default {\r\n    data() {\r\n      return{\r\n        chapterId: \"\",\r\n        chapter: {},\r\n        homework: [],\r\n        total: 0,\r\n        defen: 0,\r\n        flag: false\r\n      }\r\n    },\r\n    components: {\r\n      headerPage,\r\n      bottomPage\r\n    },\r\n    methods: {\r\n      getApeChapterById() {\r\n          getApeChapterById({id:this.chapterId}).then(res => {\r\n              if(res.code == 1000) {\r\n                  this.chapter = res.data\r\n              }\r\n          })\r\n      },\r\n      getApeHomeworkStudentList() {\r\n          var param = {\r\n              chapterId: this.chapterId\r\n          }\r\n          getApeHomeworkStudentList(param).then(res => {\r\n              if (res.code == 1000) {\r\n                  this.homework = res.data\r\n                  for(let i = 0;i<this.homework.length;i++) {\r\n                      var item = this.homework[i]\r\n                      this.total = this.total + item.score\r\n                      this.defen = this.defen + item.point\r\n                      if (item.type == \"0\" || item.type == \"1\") {\r\n                          if (item.content) {\r\n                              item.content = JSON.parse(item.content)\r\n                          }\r\n                          if(item.type == 1) {\r\n                              if(item.solution) {\r\n                                item.solution = item.solution.split(\",\")\r\n                              } else {\r\n                                item.solution = []\r\n                              }\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          })\r\n      },\r\n      submit() {\r\n        this.$confirm('确定要提交作业内容吗？','提醒', {\r\n            confirmButtonText: '确定',\r\n            cancelButtonText: '取消',\r\n            type: 'warning'\r\n            }).then(() => {\r\n                for(let i = 0;i<this.homework.length;i++) {\r\n                    var item = this.homework[i]\r\n                    if(item.type == 1) {\r\n                        item.solution = item.solution.join(\",\")\r\n                    }\r\n                }\r\n                var param = {\r\n                    homework: this.homework\r\n                }\r\n                saveApeHomeworkStudent(param).then(res => {\r\n                    if (res.code == 1000) {\r\n                        this.$message({\r\n                            type: 'success',\r\n                            message: '提交成功!'\r\n                        });\r\n                        this.$router.push(\"/taskInfo?id=\"+this.chapter.taskId)\r\n                    }\r\n                })\r\n            }).catch(() => {\r\n                    \r\n        });\r\n      },\r\n      getApeHomeworkStudentFlag() {\r\n          getApeHomeworkStudentFlag({id:this.chapterId}).then(res => {\r\n              if(res.code == 1000) {\r\n                  this.flag = true\r\n              } else {\r\n                  this.flag = false\r\n              }\r\n          })\r\n      }\r\n    },\r\n    created() {\r\n     \r\n    },\r\n    mounted() {\r\n      window.scrollTo({\r\n         top: 0,\r\n         behavior: 'smooth'\r\n      });\r\n      var chapterId = this.$route.query.id\r\n      if (chapterId) {\r\n          this.chapterId = chapterId\r\n      }\r\n      this.getApeChapterById()\r\n      this.getApeHomeworkStudentList()\r\n      this.getApeHomeworkStudentFlag()\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n  @import url(\"../../assets/css/assign/assignInfo.css\");\r\n</style>"],"mappings":";AA0CA,SAAAA,iBAAA,EAAAC,yBAAA,EAAAC,sBAAA,EAAAC,yBAAA;AACA,OAAAC,UAAA;AACA,OAAAC,UAAA;AACA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,KAAA;MACAC,IAAA;IACA;EACA;EACAC,UAAA;IACAT,UAAA;IACAC;EACA;EACAS,OAAA;IACAd,kBAAA;MACAA,iBAAA;QAAAe,EAAA,OAAAR;MAAA,GAAAS,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAV,OAAA,GAAAS,GAAA,CAAAX,IAAA;QACA;MACA;IACA;IACAL,0BAAA;MACA,IAAAkB,KAAA;QACAZ,SAAA,OAAAA;MACA;MACAN,yBAAA,CAAAkB,KAAA,EAAAH,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAT,QAAA,GAAAQ,GAAA,CAAAX,IAAA;UACA,SAAAc,CAAA,MAAAA,CAAA,QAAAX,QAAA,CAAAY,MAAA,EAAAD,CAAA;YACA,IAAAE,IAAA,QAAAb,QAAA,CAAAW,CAAA;YACA,KAAAV,KAAA,QAAAA,KAAA,GAAAY,IAAA,CAAAC,KAAA;YACA,KAAAZ,KAAA,QAAAA,KAAA,GAAAW,IAAA,CAAAE,KAAA;YACA,IAAAF,IAAA,CAAAG,IAAA,WAAAH,IAAA,CAAAG,IAAA;cACA,IAAAH,IAAA,CAAAI,OAAA;gBACAJ,IAAA,CAAAI,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,IAAA,CAAAI,OAAA;cACA;cACA,IAAAJ,IAAA,CAAAG,IAAA;gBACA,IAAAH,IAAA,CAAAO,QAAA;kBACAP,IAAA,CAAAO,QAAA,GAAAP,IAAA,CAAAO,QAAA,CAAAC,KAAA;gBACA;kBACAR,IAAA,CAAAO,QAAA;gBACA;cACA;YACA;UACA;QACA;MACA;IACA;IACAE,OAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAT,IAAA;MACA,GAAAT,IAAA;QACA,SAAAI,CAAA,MAAAA,CAAA,QAAAX,QAAA,CAAAY,MAAA,EAAAD,CAAA;UACA,IAAAE,IAAA,QAAAb,QAAA,CAAAW,CAAA;UACA,IAAAE,IAAA,CAAAG,IAAA;YACAH,IAAA,CAAAO,QAAA,GAAAP,IAAA,CAAAO,QAAA,CAAAM,IAAA;UACA;QACA;QACA,IAAAhB,KAAA;UACAV,QAAA,OAAAA;QACA;QACAP,sBAAA,CAAAiB,KAAA,EAAAH,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAkB,QAAA;cACAX,IAAA;cACAY,OAAA;YACA;YACA,KAAAC,OAAA,CAAAC,IAAA,wBAAA/B,OAAA,CAAAgC,MAAA;UACA;QACA;MACA,GAAAC,KAAA,QAEA;IACA;IACAtC,0BAAA;MACAA,yBAAA;QAAAY,EAAA,OAAAR;MAAA,GAAAS,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAN,IAAA;QACA;UACA,KAAAA,IAAA;QACA;MACA;IACA;EACA;EACA8B,QAAA,GAEA;EACAC,QAAA;IACAC,MAAA,CAAAC,QAAA;MACAC,GAAA;MACAC,QAAA;IACA;IACA,IAAAxC,SAAA,QAAAyC,MAAA,CAAAC,KAAA,CAAAlC,EAAA;IACA,IAAAR,SAAA;MACA,KAAAA,SAAA,GAAAA,SAAA;IACA;IACA,KAAAP,iBAAA;IACA,KAAAC,yBAAA;IACA,KAAAE,yBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}