<template>
  <div class="teacherInfo">
    <headerPage></headerPage>
    <div class="teacherInfo-content">
        <div class="teacherInfo-name">
            <div class="teacherInfo-desc">
                <div class="teacherInfo-title">{{teacher.userName}}</div>
                  <div class="teacherInfo-title1">
                  <el-tooltip
                    class="item"
                    effect="light"
                    :content="teacher.remark"
                    placement="bottom"
                    popper-class="custom-tooltip"
                  >
                    <i class="el-icon-info info-icon"></i>
                  </el-tooltip>
                  <span class="remark-text">{{teacher.remark}}</span>
                </div>
            </div>
            <div class="teacherInfo-list">
                <div class="teacherInfo-image">
                    <div class="teacherInfo-fengmian">
                        <img style="width:100%;height:100%" :src="$store.state.HOST + teacher.avatar">
                    </div>
                </div>
                <div class="teacherInfo-video">
                    <div class="teacherInfo-title2">课程列表：</div>
                    <div @click="toTask(item.id)" class="teacherInfo-video-item" v-for="(item,index) in task" :key="index">
                        <div :title="item.name" class="teacherInfo-video-item1">{{item.name}}</div>
                        <div class="teacherInfo-video-item2"><i class="el-icon-arrow-right"></i></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <bottomPage></bottomPage>
  </div>
</template>

<script>
  import {getUserById,getTaskByTeacher} from '../../api/api'
  import headerPage from "../../components/header/header"
  import bottomPage from "../../components/bottom/bottom"
  export default {
    data() {
      return{
        teacherId: "",
        teacher: {},
        task: [],
        commentList: []
      }
    },
    components: {
      headerPage,
      bottomPage,
    },
    methods: {
      toTask(id) {
        this.$router.push("/taskInfo?id=" + id)
      }
    },
    created() {

    },
    mounted() {
      var teacherId = this.$route.query.id
      if (teacherId) {
        this.teacherId = teacherId
      }
      getUserById({id:this.teacherId}).then(res => {
        if (res.code == 1000) {
          this.teacher = res.data
        }
      })
      getTaskByTeacher({id:this.teacherId}).then(res => {
        if (res.code == 1000) {
          this.task = res.data
        }
      })
    }
 }
</script>

<style scoped>
  @import url("../../assets/css/teacher/teacherInfo.css");

  .teacherInfo-title1 {
    display: flex;
    align-items: center;
    margin-top: 8px;
  }

  .remark-text {
    white-space: normal;
    word-break: break-word;
    margin-left: 5px;
    line-height: 1.5;
  }

  .info-icon {
    cursor: pointer;
    color: #909399;
    margin-right: 5px;
    transition: color 0.3s;
  }

  .info-icon:hover {
    color: #409EFF;
  }
</style>

<style>
  /* 全局样式，因为popper-class生成的元素不在当前组件作用域内 */
  .custom-tooltip {
    max-width: 300px;
    padding: 12px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    font-size: 14px;
    line-height: 1.5;
    color: #606266;
    background-color: #fff;
    border: none;
  }

  .custom-tooltip[x-placement^=bottom] .popper__arrow {
    border-bottom-color: #fff;
  }

  .custom-tooltip[x-placement^=bottom] .popper__arrow:after {
    border-bottom-color: #fff;
  }
</style>